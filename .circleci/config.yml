version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6-node
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
            - v1-dependencies-
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "result-client/yarn.lock" }}
            - yarn-packages-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
            cd result-client && yarn install --frozen-lockfile
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - save_cache:
          key: yarn-packages-{{ checksum "result-client/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: make result page
          command: make result_client
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            mkdir -p test-results/nosetests
            nosetests --with-xunit --xunit-file test-results/nosetests/result.xml --with-coverage --cover-xml
      - store_test_results:
          path: test-results
      - run:
          name: upload test coverage
          command: |
            . venv/bin/activate
            python-codacy-coverage -r coverage.xml
  deploy:
    docker:
      - image: circleci/python:3.6-node
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
            - v1-dependencies-
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "result-client/yarn.lock" }}
            - yarn-packages-
      - run:
          name: Deploy to production
          command: |
            . venv/bin/activate
            make deploy-production
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
          
